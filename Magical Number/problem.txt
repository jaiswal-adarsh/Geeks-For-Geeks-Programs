Your friend loves magic and he has coined a new term - "Magical number". To perform his magic, he needs that magic number. You are given a sorted array arr of distinct integers. A number arr[i] is a magical number if arr[i] = i (0-based indexing).
You have to return the leftmost magical number present in the given array arr, if there is no magical number in the array arr then return -1

Example1:

Input:
N = 5
arr = {-2, -1, 2, 4, 6}
Output: 2
Explanation: there is only one magical number present at index 2 because arr[2] = 2.
Example2:

Input:
N = 6
arr = {-1, 1, 2, 3, 5, 7}
Output: 1
Explanation: there are three magical numbers 1,2 and 3 present in the array,so leftmost magical number is 1.  
 
Your Task: You have to complete the function findMagicalNumber( ) , which takes integer N and a sorted array arr of distinct integers as input parameters and return the leftmost magical number if present else return -1. 

Expected Time Complexity: O(log(N))
Expected Space Complexity: O(1)
Constraints:
1 ≤ N ≤ 106
-109 ≤ arr[i] ≤ 109